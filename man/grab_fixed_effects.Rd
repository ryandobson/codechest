% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lm_and_lmer_helpers.R
\name{grab_fixed_effects}
\alias{grab_fixed_effects}
\title{Extract fixed-effect term labels from a model or formula}
\usage{
grab_fixed_effects(model, include_intercept = FALSE)
}
\arguments{
\item{model}{A fitted model object (e.g., \code{lm}, \code{lmerMod}, \code{glmerMod})
or a model \code{formula}.}

\item{include_intercept}{Logical; if \code{TRUE} and the model includes an
intercept, prepend \code{"(Intercept)"} to the returned vector. Default \code{FALSE}.}
}
\value{
A character vector of fixed-effect term labels. Returns \code{character(0)}
if no fixed-effect terms are present.
}
\description{
Returns the fixed-effect terms (as character labels) from a fitted model or
a model \code{formula}. If the input is an \code{lme4} mixed model
(\code{merMod}/\code{glmerMod}), random-effects bars are removed first so
only the fixed-effects portion is parsed.
}
\details{
For mixed models, the function attempts to call \code{lme4::nobars()} on the
formula to drop any \code{(lhs | grp)} or \code{(lhs || grp)} terms prior to
extracting fixed-effect labels with \code{terms()}.
}
\examples{
\dontrun{
# From a formula
.grab_fixed_effects(y ~ x1 + x2 + x1:x2)

# From an lm fit
fit_lm <- lm(mpg ~ wt + hp, data = mtcars)
.grab_fixed_effects(fit_lm)

# From an lmer fit (random bars are ignored)
fit_lmer <- lme4::lmer(y ~ x + (1 + x | id), data = df)
.grab_fixed_effects(fit_lmer)

# Include intercept label if present
.grab_fixed_effects(fit_lm, include_intercept = TRUE)
}

}
\keyword{lm_helper}
